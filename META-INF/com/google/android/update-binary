#!/sbin/sh
## 余空
CPU_ABI=$(getprop ro.product.cpu.abi)
Android=$(getprop ro.build.version.release)
versionName=$(pm dump com.android.thememanager | grep -m 1 versionName | sed -n 's/.*=//p')

## 定义module.prop
id=theme_pojie_apktool
name="主题破解v${versionName} Auto"
version=1.6
versionCode=210813
author=余空
description="主题/字体xx,任意使用第三方mtz."

Echo() {
echo '#!/system/bin/sh
chmod 731 /data/system/theme
rm -rf /data/system/package_cache/*' > $TMPDIR/service.sh
echo '#!/system/bin/sh
if [ ! -e "/system/app/ThemeManager/ThemeManager.apk" ]; then
  YuK=MIUIThemeManager
else
  YuK=ThemeManager
fi
dda=/data/dalvik-cache/arm
[ -d ${dda}64 ] && dda=${dda}64
for i in $YuK; do
  rm -rf $dda/system@*@{$i}*
done
rm -rf /data/system/package_cache/*
chmod 775 /data/system/theme
rm -rf /data/system/theme/rights
rm -rf /data/app/*/com.android.thememanager*
rm -rf /data/app/com.android.thememanager*' > $TMPDIR/uninstall.sh
}

## 执行模块安装
on_install() {
  Print "________________"
  Print "  ※ 模块安装 ※"
  Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
  Print "- 正在刷入"
  Print "- 正在配置Apktool,请稍后"
  mkdir -p /data/local/Apktool
  unzip -p "$ZIPFILE" 'Apktool.tar.xz' | tar xJ -C /data/local/Apktool >/dev/null
  chmod -R 777 /data/local/Apktool
  a() {
  echo "Test" > /sdcard/Android/YuKongA.txt
  if [ -e /sdcard/Android/YuKongA.txt ]; then
    if [ -e /data/data/per.pqy.openjdk ]; then
      sleep 0.1
    else
      cp -rf /data/local/Apktool/per.pqy.openjdk /data/data
      chmod -R 777 /data/data/per.pqy.openjdk
    fi
    rm -rf /sdcard/Android/YuKongA.txt
  else
    a
  fi
  }
  a
  apktool=/data/local/Apktool/apktool/apktool.sh
  zipalign=/data/local/Apktool/apktool/openjdk/bin/zipalign
  sed=/data/local/Apktool/sed
  zip=/data/local/Apktool/zip
  apk=$MODPATH/Apk
  mkdir -p $apk/apk1
  if [ ! -e "/system/app/ThemeManager/ThemeManager.apk" ]; then
    YuK=MIUIThemeManager
  else
    YuK=ThemeManager
  fi
  Path=$(pm path com.android.thememanager | sed 's/package://g')
  Print "- 反编译的应用版本: v$versionName"
  Print "- 应用安装路径: $Path"
  cp -rf $Path $apk/base.apk
  mkdir -p $MODPATH/system/app/$YuK
  Print "- 开始处理$YuK.apk"
  Print "- 这需要15秒以上"
  Print "- 请耐心等待"
  cd $apk/
  unzip -o "$apk/base.apk" 'classes*.dex' 'lib/*' -d $apk/apk1 >/dev/null
  cd $apk/apk1/
  $zip -r $apk/apk_origin.apk ./* >/dev/null
  $apktool d -q -b -r -f -m $apk/apk_origin.apk
  Mod0=$(find $apk/apk1/apk_origin/smali*/com/android/thememanager/*/*/ -type f -name '*.smali' 2>/dev/null | xargs grep -rl 'DRM_ERROR_UNKNOWN' | sed 's/^\.\///' | sort)
  $sed -i 's/DRM_ERROR_UNKNOWN/DRM_SUCCESS/g' $Mod0
  mod0=${Mod0#$apk/apk1/apk_origin/smali*/}
  mod0=${mod0%/*.smali}
  mkdir -p $apk/apk2/smali/$mod0
  cp -rf $Mod0 $apk/apk2/smali/$mod0
  Mod1=$(find $apk/apk1/apk_origin/smali*/com/android/thememanager/module/detail/presenter/ -type f -name 'OnlineResourceDetailPresenter.smali' 2>/dev/null | xargs grep -rl '.method public m()Z' | sed 's/^\.\///' | sort)
  $sed -i '/OnlineResourceDetail;->bought:Z/i\    const/4 v0, 0x1' $Mod1
  $sed -i '/OnlineResourceDetail;->bought:Z/i\    return v0' $Mod1
  mod1=${Mod1#$apk/apk1/apk_origin/smali*/}
  mod1=${mod1%/*.smali}
  mkdir -p $apk/apk2/smali/$mod1
  cp -rf $Mod1 $apk/apk2/smali/$mod1
  Mod2=$(find $apk/apk1/apk_origin/smali*/com/android/thememanager/basemodule/ad/model/ -type f -name 'AdInfo.smali' 2>/dev/null | xargs grep -rl '.method public isVideoAd()Z' | sed 's/^\.\///' | sort)
  $sed -i '/^.method public isVideoAd()Z/,/^.end method/{//!d}' $Mod2
  $sed -i -e '/^.method public isVideoAd()Z/a\    .locals 1\n\n    const/4 v0, 0x0\n\n   return v0' $Mod2
  mod2=${Mod2#$$apk/apk1/apk_origin/smali*/}
  mod2=${mod2%/*.smali}
  mkdir -p $apk/apk2/smali/$mod2
  cp -rf $Mod2 $apk/apk2/smali/$mod2
  Mod3=$(find $apk/apk1/apk_origin/smali*/com/android/thememanager/basemodule/ad/model/ -type f -name 'AdInfoResponse.smali' 2>/dev/null | xargs grep -rl '.method private static isAdValid' | sed 's/^\.\///' | sort)
  $sed -i '/^.method private static isAdValid/,/^.end method/{//!d}' $Mod3
  $sed -i -e '/^.method private static isAdValid/a\    .locals 1\n\n    const/4 p0, 0x0\n\n   return p0' $Mod3
  mod3=${Mod3#$apk/apk1/apk_origin/smali*/}
  mod3=${mod3%/*.smali}
  mkdir -p $apk/apk2/smali/$mod3
  cp -rf $Mod3 $apk/apk2/smali/$mod3
  cp -rf $apk/apk1/apk_origin/apktool.yml $apk/apk2/
  case "$CPU_ABI" in
      arm64*) Type=arm64 Wenj=arm64-v8a;;
      arm*) Type=arm Wenj=armeabi-v7a;;
      x86_64*) Type=x86_64 Wenj=x86_64;;
      x86*) Type=x86 Wenj=x86;;
  esac
  mkdir -p $MODPATH/system/app/$YuK/lib/$Type
  cp -rf $apk/apk1/apk_origin/lib/$Wenj/* $MODPATH/system/app/$YuK/lib/$Type
  cd $apk/apk2/
  $apktool b -q -f -c $apk/apk2 -o apk2.zip
  rm -rf $apk/apk1/apk_origin
  if [ -e $apk/apk1/classes5.dex ]; then
  mv $apk/apk1/classes5.dex $apk/apk1/classes6.dex
  fi
  if [ -e $apk/apk1/classes4.dex ]; then
  mv $apk/apk1/classes4.dex $apk/apk1/classes5.dex
  fi
  if [ -e $apk/apk1/classes3.dex ]; then
  mv $apk/apk1/classes3.dex $apk/apk1/classes4.dex
  fi
  if [ -e $apk/apk1/classes2.dex ]; then
  mv $apk/apk1/classes2.dex $apk/apk1/classes3.dex
  fi
  if [ -e $apk/apk1/classes.dex ]; then
  mv $apk/apk1/classes.dex $apk/apk1/classes2.dex
  fi
  unzip -o "$apk/apk2/apk2.zip" -d $apk/apk1 >/dev/null
  cd $apk/apk1
  $zip -r $apk/base.apk ./* >/dev/null
  $zipalign -v 4 $apk/base.apk $MODPATH/system/app/$YuK/$YuK.apk >/dev/null
  Print "- 处理apk完成"
  Print "- 清理无用文件"
  rm -rf $apk
  case $Path in
    /data*) rm -rf $Path;;
    *);;
  esac
  dda=/data/dalvik-cache/arm
  [[ -d ${dda}64 ]] && dda=${dda}64
  for i in $YuK; do
    rm -rf $dda/system@*@${i}*
  done
  rm -rf /data/system/package_cache/*
  rm -rf /data/local/Apktool
  rm -rf /data/data/per.pqy.openjdk
  Print "- 设置权限"
  set_perm_recursive $MODPATH 0 0 0755 0644
  Print "________________"
  Print "  ※ 注意事项 ※"
  Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
  Print "- 由于为自动编译版本,难免存在不可预知的问题"
  Print "- 如果刷入后存在问题,请卸载模块"
}

Start_Time=$(date "+%Y-%m-%d %H:%M:%S")
Print_Time=$(date "+%m.%d %H:%M")

umask 022
TMPDIR=/dev/tmp
rm -rf $TMPDIR 2>/dev/null
mkdir -p $TMPDIR
mount /data 2>/dev/null
OUTFD=$2
ZIPFILE=$3

Print() {
  echo "$@"
  sleep 0.015
}

if [ $Android -ge 11 ]; then
  PERSISTDIR=/dev/*/.magisk/mirror/persist
else
  PERSISTDIR=/sbin/.magisk/mirror/persist
fi

Require() {
  Print "- 当前模块不支持此Magisk版本."
  Print "- 请安装 Magisk v20.4+!"
  Print
  Print "- 或Magisk环境不完整."
  Print "- 请修复Magisk环境!"
  exit 1
}

[ -f /data/adb/magisk/util_functions.sh ] || Require
. /data/adb/magisk/util_functions.sh
[ $MAGISK_VER_CODE -lt 20400 ] && Require

setup_flashable
mount_partitions
api_level_arch_detect
boot_actions

Ver=$version，$Print_Time
echo "id=$id
name=$name
version=$Ver
versionCode=$versionCode
author=$author
description=$description" > $TMPDIR/module.prop
[ ! -f $TMPDIR/module.prop ] && abort "! 从 zip 中提取文件失败."

Echo

MODDIRNAME=modules_update
MODULEROOT=$NVBASE/$MODDIRNAME
MODID=`grep_prop id $TMPDIR/module.prop`
MODPATH=$MODULEROOT/$MODID
rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH
cp -rf $TMPDIR/* $MODPATH

print_modname() {
  Print "- Powered By Magisk"
  Print "________________"
  Print "  ※ 作者信息 ※"
  Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
  Print " 8b        d8           88      a8P"
  Print "  Y8,    ,8P            88    ,88'"
  Print "   Y8,  ,8P             88  ,88\""
  Print "    \"8aa8\"  88       88 88,d88'"
  Print "     \`88'   88       88 8888\"88,"
  Print "      88    88       88 88P   Y8b"
  Print "      88    \"8a,   ,a88 88     \"88,"
  Print "      88     \`\"YbbdP'Y8 88       Y8b"
  Print "________________"
  Print "  ※ 模块信息 ※"
  Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
  Print "- 模块名称: $name"
  Print "- 模块版本: $version"
  Print "- 模块代号: $id"
  Print "- 模块制作: $author"
  Print "- 更新日期：$versionCode"
}

print_modname
on_install

cd /
rm -rf $TMPDIR

Print "________________"
Print "  ※ 附加信息 ※"
Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
Print "- 刷入时间: $Start_Time"
End_Time=$(date "+%Y-%m-%d %H:%M:%S")
Duration=$(Print $((Sleep_Time + $(date +%s -d "${End_Time}") - $(date +%s -d "${Start_Time}"))) | awk '{t=split("60 秒 60 分 24 时 999 天",a);for(n=1;n<t;n+=2){if($1==0)break;s=$1%a[n]a[n+1]s;$1=int($1/a[n])}print s}')
Print "- 刷入耗时: $Duration"
Print "________________"
Print "  ※ 刷入成功 ※"
Print "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯"
Print "- 请重启设备."
exit 0